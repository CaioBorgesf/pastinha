# -*- coding: utf-8 -*-
"""Introdução data science

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1aJTgR5oACAfkyJyqR8PKRwRyDjzbjVQ6

# Analisando notas gem geral
"""

import pandas as pd 
 
notas = pd.read_csv("ratings.csv")
notas.head()

notas.shape

notas.columns = [ "usuarioId", "filmeId", "nota", "momento" ]
notas.head()

notas['nota'].unique()

notas [ 'nota' ] .value_counts()

notas [ 'nota'] .mean()

notas.nota.head()

notas.nota.plot (kind='hist')

notas.nota.describe()

import seaborn as sns

sns.boxplot(notas.nota)

print("media" , notas.nota.mean())
print("mediana" ,notas.nota.median())

notas.head()

"""#Analisando algumas notas especificas por filme"""

filmes = pd.read_csv("movies.csv")
filmes.columns = ["filmeId", "titulo", "generos"]
filmes.head()

notas.query( "filmeId==1" )

filmes.head()

notas.query("filmeId==1").nota.mean()

notas.query("filmeId==2").nota.mean()

medias_por_filme = notas.groupby("filmeId").mean()["nota"]
medias_por_filme.head()

medias_por_filme.plot(kind='hist')

sns.boxplot(medias_por_filme)

medias_por_filme.describe()

sns.displot(medias_por_filme, bins=10)

notas.nota.plot(kind='hist')
notas.nota.describe()

import seaborn as sns
sns.boxplot(notas.nota)

notas.query("filmeId==1").nota.mean()
notas.query("filmeId==2").nota.mean()

medias_por_filme = notas.groupby("filmeId").mean().nota
medias_por_filme.head()

"""Data frame por lingua"""

tmdb = pd.read_csv("tmdb_5000_movies.csv")
tmdb.head()

tmdb.original_language.unique()

tmdb["original_language"].value_counts().values

tmdb["original_language"].value_counts().index

tmdb["original_language"].value_counts()

contagem_de_lingua = tmdb["original_language"].value_counts().to_frame().reset_index()
contagem_de_lingua.columns = ["original_language", "total"]
contagem_de_lingua.head()

sns.barplot(x="original_language", y = "total", data = contagem_de_lingua)

sns.catplot(x="original_language", kind="count", data = tmdb)

tmdb["original_language"].value_counts().index
tmdb["original_language"].value_counts().values

contagem_de_lingua = tmdb["original_language"].value_counts().to_frame().reset_index()

contagem_de_lingua.columns = ["original_language", "total"]
contagem_de_lingua.head()

sns.barplot(x="original_language", y = "total", data = contagem_de_lingua)

sns.catplot(x = "original_language", kind="count", data = tmdb)

import matplotlib.pyplot as plt

total_por_lingua = tmdb["original_language"].value_counts()
total_geral = total_por_lingua.sum()
total_de_ingles = total_por_lingua.loc["en"]
total_do_resto = total_geral - total_de_ingles
print(total_de_ingles, total_do_resto)

dados = {
    'lingua' : ['ingles', 'outros'],
    'total' : [total_de_ingles, total_do_resto]
}
dados = pd.DataFrame(dados)
sns.barplot(x="lingua", y="total", data = dados)

plt.pie (dados['total'], labels = dados['lingua'])

total_por_lingua_de_outros_filmes = tmdb.query("original_language != 'en'").original_language.value_counts()
total_por_lingua_de_outros_filmes

filmes_sem_lingua_original_ingles = tmdb.query("original_language != 'en'")
plt.figure(figsize=(5,10))
sns.catplot(x = "original_language", kind="count", data = filmes_sem_lingua_original_ingles)

"""# Revisando o papel da média, mediana, medidas de tendência central, dispersão, desvio padrão, histograma"""

filmes_sem_lingua_original_ingles = tmdb.query("original_language != 'en'")
plt.figure(figsize=(5,10))
sns.catplot(x = "original_language", kind="count", data = filmes_sem_lingua_original_ingles,
            aspect = 2,
            palette="mako",
            order = total_por_lingua_de_outros_filmes.index)

filmes.head(2)

notas_do_toy_story = notas.query("filmeId==1")
notas_do_jumanji = notas.query("filmeId==2")
print(len(notas_do_toy_story), len(notas_do_jumanji))

print("Nota média do Toy Story %.2f" % notas_do_toy_story.nota.mean())
print("Nota média do Jumanji %.2f" % notas_do_jumanji.nota.mean())

print("Nota média do Toy Story %.2f" % notas_do_toy_story.nota.median())
print("Nota média do Jumanji %.2f" % notas_do_jumanji.nota.median())

import numpy as np
filme1 = np.append(np.array([2.5] * 10), np.array([3.5] * 10))
filme2 = np.append(np.array([5] * 10), np.array([1] * 10))

print(filme1.mean(), filme2.mean())
print(np.median(filme1), np.median(filme2))
print(np.std(filme1), np.std(filme2))

sns.distplot(filme1)
sns.distplot(filme2)

numpy

plt.boxplot([notas_do_toy_story.nota, notas_do_jumanji.nota])

sns.boxplot(x= "filmeId", y = "nota", data = notas.query("filmeId in [1,2,3,4,5]"))

print(notas_do_jumanji.nota.std())

print(np.mean(filme1), np.mean(filme2))
print(np.std(filme1), np.std(filme2))
print(np.median(filme1), np.median(filme2))

